{"version":3,"sources":["order.ts","categories.ts","GroceryTable.tsx","EquipmentList.tsx","parser.ts","CalculateShopping.tsx","recipies.ts","PlusMinusRow.tsx","MergeBaskets.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["items","a","fetch","method","headers","body","JSON","stringify","response","json","missing","categories","nabiał","mięso","warzywa","pieczywo","przetwory","akcesoria","przyprawy","leki","category","item","categoriesKey","includes","GroceryTable","props","values","map","row","type","name","label","style","textAlign","_","round","amount","unit","EquipmentList","peg$padEnd","str","targetLength","padString","length","repeat","slice","SyntaxError","message","expected","found","location","Object","setPrototypeOf","prototype","__proto__","Error","captureStackTrace","sources","this","k","src","source","text","split","s","start","loc","line","column","e","end","filler","toString","last","hex","ch","charCodeAt","toUpperCase","literalEscape","replace","classEscape","describeExpectation","expectation","escapedParts","parts","part","Array","isArray","inverted","description","expected1","i","j","descriptions","sort","join","describeExpected","found1","recipes","input","options","peg$result","peg$FAILED","peg$source","undefined","grammarSource","peg$startRuleFunctions","Doc","peg$parseDoc","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c4","peg$c5","peg$c6","peg$classExpectation","peg$c9","peg$c10","peg$c11","peg$c13","peg$c16","peg$c21","peg$otherExpectation","peg$c22","peg$c23","peg$c25","peg$c27","peg$c28","peg$c29","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","text1","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","push","peg$buildStructuredError","location1","buildMessage","s0","s1","peg$parseRecipe","s2","s3","s4","s5","peg$parse_","test","charAt","peg$parseTitle","peg$parseIngredient","peg$parseEquipment","title","ingredients","equipment","s6","s7","s8","s9","parseFloat","peg$parseNumber","trim","peg$c14","peg$c17","parse","trimStart","calculateShopping","basket","count","filtered","chain","filter","r","groceries","flatMap","groupBy","mapValues","v","value","sum","uniq","toPairs","sortBy","it","sortedUniq","PlusMinusRow","className","align","onClick","onChange","uniqSorted","param","mergeGroceries","b","amountByLabel","list","find","uniqBy","mergeBaskets","baskets","reduce","result","entry","App","useState","current","setCurrent","setMissing","setBaskets","output","setOutput","useEffect","data","window","localStorage","getItem","alert","load","target","keys","key","prompt","setItem","save","pickBy","mod","c","Math","max","recipe","add","idx","index","removeBasket","overflow","order","then","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d13c98f.chunk.js","sourcesContent":["import { GroceryItem } from \"./recipe/types\";\n\nexport async function order(items: GroceryItem[]):Promise<GroceryItem[]> {\n  const response = await fetch(\"/order\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(items)\n  })\n  const missing = await response.json() as GroceryItem[];\n  return missing;\n}\n","const categories: { [category: string]: string[] } = {\n  nabiał: [\n    'smietana UHT 18%',\n    'ser żółty (krojony)',\n    \"mleko\",\n    \"jajka\",\n    \"masło\",\n  ],\n  mięso: [\n    'mięso mielone wołowe',\n    'pierś kurczaka',\n    'kiełbasa ~15cm',\n    \"sucha krakowka\",\n    \"żeberka wędzone\",\n    \"mięso na gulasz\",\n    \"kabanosy chili\",\n    \"karkówka\",\n    \"wędzony boczek\",\n    \"polędwiczki wieprzowe\",\n    \"żeberka surowe\",\n  ],\n  warzywa: [\n    \"cytryna\",\n    'marchew',\n    'ziemniaki myte',\n    'kapusty (główka)',\n    'cebula',\n    'pieczarki',\n    'natka pietruszki',\n    'pomidory',\n    \"ziemniaki\",\n    \"czerwona papryka\",\n    \"suchego grochu łuskanego (połówki)\",\n    \"kapusta kiszona\",\n  ],\n  pieczywo: [\n    'bułka kajzerka',\n    'podłużne bułki do currywurst',\n    \"chleb biały krojony\",\n    \"tortilla\",\n  ],\n  przetwory: [\n    'ketchup ostry',\n    'majonez jalapenos',\n    'jalapenos',\n    'ogórki konserwowe',\n    'cebulka prażona',\n    'olej rzepakowy',\n    'makaron tagliatelle',\n    \"kasza gryczana\",\n    \"makaron spagetti\",\n    \"chocopuffs\",\n    \"cini minis\",\n    \"pomidory krojone puszka / przecier pomidorowy\",\n    \"rum do grogu\",\n    \"czekolada gożka\",\n    \"czerwona fasola puszka\",\n    \"kukurydza puszka\",\n    \"suszone śliwki\",\n    \"zakwasu żytniego do żurku\",\n    \"żurawina\",\n    \"mąka\",\n    \"Chrzan\",\n    \"kawa\",    \n  ],\n  akcesoria: [\n    \"mokre chustki\",\n    \"papier toaletowy\",\n    \"płyn do mycia naczyń\",\n    \"worki na śmieci 60L\",\n  ],\n  przyprawy: [\n    'curry/kurkuma',\n    'czosnek granulowany',\n    'zioła prowansalskie',\n    \"sól\",\n    \"cukier\",\n    \"czosnek granulowany/płatki\",\n    \"goździki\",\n    \"majeranek\",\n    \"ziarna jałowca\",\n    \"chilli\",\n    \"oregano\",\n    \"pieprz\",\n    \"proszek do pieczenia\",\n    \"kmin rzymski\"\n  ],\n  leki: [\n    \"apap/ibuprom\",\n    \"helsi / Porost Islandzki / isla\",\n    \"reni\",\n  ]\n}\nexport function category(item: string): string | undefined {\n  for (let categoriesKey in categories) {\n    if (categories[categoriesKey].includes(item)) {\n      return categoriesKey;\n    }\n  }\n}\n","import { GroceryItem } from \"./recipe/types\";\nimport _ from \"lodash\";\nimport { category } from \"./categories\";\nimport React from \"react\";\n\nexport function GroceryTable(props: { values: GroceryItem[] }) {\n  return <table>\n    <tbody>\n    {props.values.map(row => <tr key={row.label}>\n      <td><label><input type=\"checkbox\" name={row.label}/> {row.label}</label></td>\n      <td style={{textAlign: 'right'}}>{_.round(row.amount, 2)}</td>\n      <td>{row.unit}</td>\n      <td>{category(row.label)}</td>\n    </tr>)}\n    </tbody>\n  </table>\n\n}\n","import React from \"react\";\n\nexport function EquipmentList(props: { values: string[] }) {\n  return <ul>\n    {props.values.map(row =>\n      <li key={row}>{row}</li>\n    )}\n  </ul>\n}\n","\n// Generated by peggy v. 1.2.0 (ts-pegjs plugin v. 1.2.1 )\n//\n// https://peggyjs.org/   https://github.com/metadevpro/ts-pegjs\n\n\"use strict\";\n\nexport interface IFilePosition {\n  offset: number;\n  line: number;\n  column: number;\n}\n\nexport interface IFileRange {\n  start: IFilePosition;\n  end: IFilePosition;\n  source: string;\n}\n\nexport interface ILiteralExpectation {\n  type: \"literal\";\n  text: string;\n  ignoreCase: boolean;\n}\n\nexport interface IClassParts extends Array<string | IClassParts> {}\n\nexport interface IClassExpectation {\n  type: \"class\";\n  parts: IClassParts;\n  inverted: boolean;\n  ignoreCase: boolean;\n}\n\nexport interface IAnyExpectation {\n  type: \"any\";\n}\n\nexport interface IEndExpectation {\n  type: \"end\";\n}\n\nexport interface IOtherExpectation {\n  type: \"other\";\n  description: string;\n}\n\nexport type Expectation = ILiteralExpectation | IClassExpectation | IAnyExpectation | IEndExpectation | IOtherExpectation;\n\nfunction peg$padEnd(str: string, targetLength: number, padString: string) {\n  padString = padString || ' ';\n  if (str.length > targetLength) {\n    return str;\n  }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\nexport class SyntaxError extends Error {\n  public static buildMessage(expected: Expectation[], found: string | null) {\n    function hex(ch: string): string {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s: string): string {\n      return s\n        .replace(/\\\\/g, \"\\\\\\\\\")\n        .replace(/\"/g,  \"\\\\\\\"\")\n        .replace(/\\0/g, \"\\\\0\")\n        .replace(/\\t/g, \"\\\\t\")\n        .replace(/\\n/g, \"\\\\n\")\n        .replace(/\\r/g, \"\\\\r\")\n        .replace(/[\\x00-\\x0F]/g,            (ch) => \"\\\\x0\" + hex(ch) )\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, (ch) => \"\\\\x\"  + hex(ch) );\n    }\n\n    function classEscape(s: string): string {\n      return s\n        .replace(/\\\\/g, \"\\\\\\\\\")\n        .replace(/\\]/g, \"\\\\]\")\n        .replace(/\\^/g, \"\\\\^\")\n        .replace(/-/g,  \"\\\\-\")\n        .replace(/\\0/g, \"\\\\0\")\n        .replace(/\\t/g, \"\\\\t\")\n        .replace(/\\n/g, \"\\\\n\")\n        .replace(/\\r/g, \"\\\\r\")\n        .replace(/[\\x00-\\x0F]/g,            (ch) => \"\\\\x0\" + hex(ch) )\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, (ch) => \"\\\\x\"  + hex(ch) );\n    }\n\n    function describeExpectation(expectation: Expectation) {\n      switch (expectation.type) {\n        case \"literal\":\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        case \"class\":\n          const escapedParts = expectation.parts.map((part) => {\n            return Array.isArray(part)\n              ? classEscape(part[0] as string) + \"-\" + classEscape(part[1] as string)\n              : classEscape(part);\n          });\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        case \"any\":\n          return \"any character\";\n        case \"end\":\n          return \"end of input\";\n        case \"other\":\n          return expectation.description;\n      }\n    }\n\n    function describeExpected(expected1: Expectation[]) {\n      const descriptions = expected1.map(describeExpectation);\n      let i: number;\n      let j: number;\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found1: string | null) {\n      return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  }\n\n  public message: string;\n  public expected: Expectation[];\n  public found: string | null;\n  public location: IFileRange;\n  public name: string;\n\n  constructor(message: string, expected: Expectation[], found: string | null, location: IFileRange) {\n    super();\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.location = location;\n    this.name = \"SyntaxError\";\n\n    if (typeof (Object as any).setPrototypeOf === \"function\") {\n      (Object as any).setPrototypeOf(this, SyntaxError.prototype);\n    } else {\n      (this as any).__proto__ = SyntaxError.prototype;\n    }\n    if (typeof (Error as any).captureStackTrace === \"function\") {\n      (Error as any).captureStackTrace(this, SyntaxError);\n    }\n  }\n\n  format(sources: { source: string; text: string }[]): string {\n    let str = 'Error: ' + this.message;\n    if (this.location) {\n      let src: string[] | null = null;\n      let k;\n      for (k = 0; k < sources.length; k++) {\n        if (sources[k].source === this.location.source) {\n          src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n          break;\n        }\n      }\n      let s = this.location.start;\n      let loc = this.location.source + ':' + s.line + ':' + s.column;\n      if (src) {\n        let e = this.location.end;\n        let filler = peg$padEnd('', s.line.toString().length, ' ');\n        let line = src[s.line - 1];\n        let last = s.line === e.line ? e.column : line.length + 1;\n        str += '\\n --> ' + loc + '\\n' + filler + ' |\\n' + s.line + ' | ' + line + '\\n' + filler + ' | ' +\n          peg$padEnd('', s.column - 1, ' ') +\n          peg$padEnd('', last - s.column, '^');\n      } else {\n        str += '\\n at ' + loc;\n      }\n    }\n    return str;\n  }\n}\n\nfunction peg$parse(input: string, options?: IParseOptions) {\n  options = options !== undefined ? options : {};\n\n  const peg$FAILED: Readonly<any> = {};\n  const peg$source = options.grammarSource;\n\n  const peg$startRuleFunctions: {[id: string]: any} = { Doc: peg$parseDoc };\n  let peg$startRuleFunction: () => any = peg$parseDoc;\n\n  const peg$c0 = \"\\n\";\n  const peg$c1 = peg$literalExpectation(\"\\n\", false);\n  const peg$c2 = function(title: any, ingredients: any, equipment: any): any {return {title,ingredients,equipment}};\n  const peg$c3 = \"#\";\n  const peg$c4 = peg$literalExpectation(\"#\", false);\n  const peg$c5 = /^[^\\n]/;\n  const peg$c6 = peg$classExpectation([\"\\n\"], true, false);\n  const peg$c7 = function(title: any): any { return title.join('') };\n  const peg$c8 = \"*\";\n  const peg$c9 = peg$literalExpectation(\"*\", false);\n  const peg$c10 = /^[^:\\n]/;\n  const peg$c11 = peg$classExpectation([\":\", \"\\n\"], true, false);\n  const peg$c12 = \":\";\n  const peg$c13 = peg$literalExpectation(\":\", false);\n  const peg$c14 = function(text: any, amount: any, unit: any): any { return ({text:text.join(''),amount,unit: unit.join('').trim()}) };\n  const peg$c15 = \"+\";\n  const peg$c16 = peg$literalExpectation(\"+\", false);\n  const peg$c17 = function(text: any): any {return text.join('')};\n  const peg$c18 = /^[^,\\n]/;\n  const peg$c19 = peg$classExpectation([\",\", \"\\n\"], true, false);\n  const peg$c20 = function(): any { return text()};\n  const peg$c21 = peg$otherExpectation(\"number\");\n  const peg$c22 = /^[0-9]/;\n  const peg$c23 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  const peg$c24 = \".\";\n  const peg$c25 = peg$literalExpectation(\".\", false);\n  const peg$c26 = function(): any { return parseFloat(text()); };\n  const peg$c27 = peg$otherExpectation(\"whitespace\");\n  const peg$c28 = /^[ \\t]/;\n  const peg$c29 = peg$classExpectation([\" \", \"\\t\"], false, false);\n\n  let peg$currPos = 0;\n  let peg$savedPos = 0;\n  const peg$posDetailsCache = [{ line: 1, column: 1 }];\n  let peg$maxFailPos = 0;\n  let peg$maxFailExpected: Expectation[] = [];\n  let peg$silentFails = 0;\n\n  let peg$result;\n\n  if (options.startRule !== undefined) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text(): string {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location(): IFileRange {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description: string, location1?: IFileRange) {\n    location1 = location1 !== undefined\n      ? location1\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location1\n    );\n  }\n\n  function error(message: string, location1?: IFileRange) {\n    location1 = location1 !== undefined\n      ? location1\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location1);\n  }\n\n  function peg$literalExpectation(text1: string, ignoreCase: boolean): ILiteralExpectation {\n    return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts: IClassParts, inverted: boolean, ignoreCase: boolean): IClassExpectation {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation(): IAnyExpectation {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation(): IEndExpectation {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description: string): IOtherExpectation {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos: number) {\n    let details = peg$posDetailsCache[pos];\n    let p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos: number, endPos: number): IFileRange {\n    const startPosDetails = peg$computePosDetails(startPos);\n    const endPosDetails = peg$computePosDetails(endPos);\n\n    return {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected1: Expectation) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected1);\n  }\n\n  function peg$buildSimpleError(message: string, location1: IFileRange) {\n    return new SyntaxError(message, [], \"\", location1);\n  }\n\n  function peg$buildStructuredError(expected1: Expectation[], found: string | null, location1: IFileRange) {\n    return new SyntaxError(\n      SyntaxError.buildMessage(expected1, found),\n      expected1,\n      found,\n      location1\n    );\n  }\n\n  function peg$parseDoc(): any {\n    let s0, s1;\n\n    s0 = [];\n    s1 = peg$parseRecipe();\n    if (s1 as any !== peg$FAILED) {\n      while (s1 as any !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseRecipe();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRecipe(): any {\n    let s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseTitle();\n    if (s1 as any !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseIngredient();\n      if (s3 as any !== peg$FAILED) {\n        while (s3 as any !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseIngredient();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 as any !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseEquipment();\n        while (s4 as any !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseEquipment();\n        }\n        if (s3 as any !== peg$FAILED) {\n          s4 = [];\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s5 = peg$c0;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s5 as any !== peg$FAILED) {\n            while (s5 as any !== peg$FAILED) {\n              s4.push(s5);\n              if (input.charCodeAt(peg$currPos) === 10) {\n                s5 = peg$c0;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c1); }\n              }\n            }\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 as any !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c2(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTitle(): any {\n    let s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    if (s1 as any !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 as any !== peg$FAILED) {\n        s3 = [];\n        if (peg$c5.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s4 as any !== peg$FAILED) {\n          while (s4 as any !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c5.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 as any !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s4 = peg$c0;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s4 as any !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c7(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIngredient(): any {\n    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c9); }\n    }\n    if (s1 as any !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 as any !== peg$FAILED) {\n        s3 = [];\n        if (peg$c10.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        if (s4 as any !== peg$FAILED) {\n          while (s4 as any !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c10.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c11); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 as any !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s4 = peg$c12;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c13); }\n          }\n          if (s4 as any !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 as any !== peg$FAILED) {\n              s6 = peg$parseNumber();\n              if (s6 as any !== peg$FAILED) {\n                s7 = [];\n                if (peg$c5.test(input.charAt(peg$currPos))) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c6); }\n                }\n                if (s8 as any !== peg$FAILED) {\n                  while (s8 as any !== peg$FAILED) {\n                    s7.push(s8);\n                    if (peg$c5.test(input.charAt(peg$currPos))) {\n                      s8 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n                    }\n                  }\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 as any !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 as any !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 10) {\n                      s9 = peg$c0;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c1); }\n                    }\n                    if (s9 as any !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c14(s3, s6, s7);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEquipment(): any {\n    let s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s1 = peg$c15;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s1 as any !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 as any !== peg$FAILED) {\n        s3 = [];\n        if (peg$c5.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s4 as any !== peg$FAILED) {\n          while (s4 as any !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c5.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 as any !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 as any !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 10) {\n              s5 = peg$c0;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c1); }\n            }\n            if (s5 as any !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c17(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseItem(): any {\n    let s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c18.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n    if (s2 as any !== peg$FAILED) {\n      while (s2 as any !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c18.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c19); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 as any !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c20();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseNumber(): any {\n    let s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 as any !== peg$FAILED) {\n      s2 = [];\n      if (peg$c22.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s3 as any !== peg$FAILED) {\n        while (s3 as any !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c22.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 as any !== peg$FAILED) {\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s4 = peg$c24;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c25); }\n        }\n        if (s4 as any !== peg$FAILED) {\n          s5 = [];\n          if (peg$c22.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n          if (s6 as any !== peg$FAILED) {\n            while (s6 as any !== peg$FAILED) {\n              s5.push(s6);\n              if (peg$c22.test(input.charAt(peg$currPos))) {\n                s6 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c23); }\n              }\n            }\n          } else {\n            s5 = peg$FAILED;\n          }\n          if (s5 as any !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 as any === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 as any !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c26();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 as any === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_(): any {\n    let s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c28.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n    }\n    while (s1 as any !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c28.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 as any === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nexport interface IParseOptions {\n  filename?: string;\n  startRule?: string;\n  tracer?: any;\n  [key: string]: any;\n}\nexport type ParseFunction = (input: string, options?: IParseOptions) => any;\nexport const parse: ParseFunction = peg$parse;\n\n","import { Recipe, Result } from \"./recipe/types\";\nimport _ from \"lodash\";\nimport { category } from \"./categories\";\nimport { parse } from \"./parser\";\nimport recipesRaw from \"./recipies\";\n\nexport const recipes: Recipe[] = parse(recipesRaw.trimStart());\n\nexport interface Basket {\n  [recipe: string]: number,\n}\n\nexport interface BasketForCount {\n  basket: Basket,\n  count: number,\n}\n\nexport function calculateShopping(input: BasketForCount): Result {\n  const {basket, count} = input;\n  const filtered = _.chain(recipes)\n    .filter(r => basket[r.title] > 0);\n  const groceries = filtered\n    .map(r => ({\n      ...r,\n      ingredients: r.ingredients.map(i => ({\n        ...i,\n        amount: i.amount * basket[r.title]\n      }))\n    }))\n    .flatMap(r => r.ingredients)\n    .groupBy(r => r.text)\n    .mapValues(v => ({\n      value: _.sum(v.map(i => i.amount)),\n      unit: _.chain(v).map(i => i.unit).uniq().join('!=').value(),\n    }))\n    .toPairs()\n    .map(([label, amount]) => ({\n      label,\n      amount: amount.value * count,\n      unit: amount.unit\n    }))\n    .sortBy(it => [category(it.label), it.label])\n    .value();\n  const equipment = filtered.flatMap(it => it.equipment).sort().sortedUniq().value();\n  return {groceries, equipment};\n}\n","export default `\n# owsianka\n* płatki owsiane: 75 g\n* chia: 8 g\n* mleko: 0.25 L\n* ananas puszka: 60 g\n* konfitura jagodowa: 60 g\n\n# żeberka\n* żeberka surowe:\t300\tg\n* ziemniaki: 0.150 kg\n* cebula: 60 g\n* rodzynki: 5 g\n* olej rzepakowy: 10 ml\n* musztarda: 30 g\n* miód: 30 g\n* sól: 5 g\n* pieprz: 5 g\n+ kociołek,łyżka,druciak\n\n# skrzydełka\n* skrzydełka kurczaka: 6 szt\n* ostra pasta paprykowa: 15 g\n* olej rzepakowy: 10 ml\n* koncentrat pomidorowy: 5 g\n* chilli: 0.1\topakowanie\n* papryka (przyprawa): 0.1\topakowanie\n\n# zielone curry\n* pierś kurczaka: 150 g\n* cebula: 50 g\n* czosnek granulowany: 8 g\n* imbir: 2 cm\n* olej rzepakowy: 50 ml\n* marchew: 0.05 kg\n* czerwona papryka: 0.5 szt\n* zielona pasta curry: 35 g\n* mleczko kokosowe: 250 ml\n* ryż jaśminowy: 150 g\n* sól: 10 g\n* pieprz: 5 g\n* curry/kurkuma: 5 g\n+ kociołek,łyżka,druciak\n+ obieraczka do warzyw\n\n# cassoulet\n* fasola: 150 g\n* kiełbasa ~15cm: 1 szt\n* karkówka:\t100 g\n* boczek: 50 g\n* udka kurczaka: 1 szt\n* czosnek granulowany: 4 g\n* goździki: 0.01 g\n* zioła prowansalskie: 0.2 opakowanie\n* sól: 10 g\n* pomidory krojone puszka / przecier pomidorowy: 100 g\n* koncentrat pomidorowy: 10 g\n* olej rzepakowy: 50 ml\n* marchew: 0.10 kg\n* cebula: 50 g\n+ kociołek,łyżka,druciak\n+ obieraczka do warzyw\n\n# makaron z kurczakiem w śmietanowym sosie pieczarkowym\n* smietana UHT 18%: 60 g\n* pierś kurczaka: 150 g\n* makaron tagliatelle: 125 g\n* cebula: 40 g\n* pieczarki: 80 g\n* natka pietruszki: 0.2 szt\n* sól: 10 g\n+ kociołek,łyżka,druciak\n\n# hamburgery\n* bułka kajzerka: 2.3 szt\n* mięso mielone wołowe: 200 g\n* ketchup ostry: 30 g\n* majonez jalapenos: 30 g\n* ogórki konserwowe: 30 g\n* jalapenos: 30 g\n* pomidory: 0.5 szt\n\n# hamburgery wege\n* bułka kajzerka: 2.3 szt\n* burger wege: 2 szt\n* ketchup ostry: 30 g\n* majonez jalapenos: 30 g\n* ogórki konserwowe: 30 g\n* jalapenos: 30 g\n* pomidory: 0.5 szt\n\n\n# curry wurst\n* podłużne bułki do currywurst: 2 szt\n* kiełbasa ~15cm: 2 szt\n* cebulka prażona: 40 g\n* curry/kurkuma: 5 g\n* ketchup ostry: 50 g\n* jalapenos: 30 g\n  \n# curry wurst wege\n* podłużne bułki do currywurst: 2 szt\n* kiełbasa wege ~15cm: 2 szt\n* cebulka prażona: 40 g\n* curry/kurkuma: 5 g\n* ketchup ostry: 50 g\n* jalapenos: 30 g\n\n# kiełbasa z cebulą\n* kiełbasa ~15cm: 2 szt\n* cebula: 150 g\n* ketchup ostry: 50 g\n* musztarda: 30 g\n* pomidory: 1 szt\n* chleb: 2 kromki\n\n# prażonka\n* kiełbasa ~15cm: 0.5 szt\n* czosnek granulowany: 5 g\n* zioła prowansalskie: 0.2 opakowanie\n* olej rzepakowy: 50 ml\n* marchew: 0.15 kg\n* ziemniaki: 0.3 kg\n* kapusty (główka): 200 g\n* cebula: 150 g\n* sól: 20 g\n+ kociołek,łyżka,druciak\n+ obieraczka do warzyw\n\n# quesadilla\n* tortilla: 2 szt\n* ser żółty (krojony): 60 g\n* jalapenos: 50 g\n* sucha krakowka: 60 g\n+ płyta żeliwna, szpachla\n\n# quesadilla wege\n* tortilla: 2 szt\n* ser żółty (krojony): 60 g\n* jalapenos: 50 g\n+ płyta żeliwna, szpachla\n\n# gulasz z kaszą\n* chleb: 3 kromki\n* mięso na gulasz: 150 g\n* czosnek granulowany: 4 g\n* zioła prowansalskie: 0.2 opakowanie\n* ziarna jałowca: 0.2 opakowanie\n* sól: 10 g\n* pomidory krojone puszka / przecier pomidorowy: 100 g\n* olej rzepakowy: 50 ml\n* kasza gryczana: 100\tg\n* marchew: 0.15 kg\n* cebula: 100 g\n* czerwona papryka: 0.1 g\n+ kociołek,łyżka,druciak\n+ obieraczka do warzyw\n\n# grochówka\n* chleb: 3 kromki\n* żeberka wędzone: 150 g\n* majeranek: 0.2 opakowanie\n* sól: 10 g\n* suchego grochu łuskanego (połówki): 60 g\n* marchew: 0.04 kg\n* ziemniaki: 0.12 kg\n* cebula: 50 g\n+ kociołek,łyżka,druciak\n+ obieraczka do warzyw\n\n# płatki z mlekiem\n* chocopuffs: 40 g\n* cini minis: 40 g\n* mleko: 0.3 L\n\n# grog\n* goździki: 0.01 g\n* rum do grogu: 0.125 L\n* cukier: 4 g\n* cytryna: 100g\n+ wyciskarka do cytryn\n+ termos\n\n# spaghetti\n* mięso mielone wołowe: 100 g\n* czosnek granulowany: 4 g\n* zioła prowansalskie: 0.2 opakowanie\n* sól: 10 g\n* cebula: 100 g\n* pomidory krojone puszka / przecier pomidorowy: 150 g\n* makaron spagetti: 100 g\n+ kociołek,łyżka,druciak\n\n# spaghetti z kiełbasą\n* kiełbasa: 100 g\n* czosnek granulowany: 4 g\n* zioła prowansalskie: 0.2 opakowanie\n* sól: 10 g\n* cebula: 100 g\n* pomidory krojone puszka / przecier pomidorowy: 150 g\n* makaron spagetti: 100 g\n+ kociołek,łyżka,druciak\n\n# tosty\n* chleb: 6 kromki\n* ser żółty (krojony): 75 g\n* sucha krakowka: 5 g\n* jalapenos: 40 g\n* ketchup ostry: 60 g\n* ogórki konserwowe: 30 g\n* cebula: 30 g\n+ płyta żeliwna, szpachla\n\n\n# tosty wege\n* chleb: 6 kromki\n* ser żółty (krojony): 75 g\n* jalapenos: 40 g\n* ketchup ostry: 60 g\n* ogórki konserwowe: 30 g\n* cebula: 30 g\n+ płyta żeliwna, szpachla\n\n# kwaśnica\n* żeberka surowe:\t175\tg\n* wędzony boczek:\t75\tg\n* żeberka wędzone:\t150\tg\n* majeranek: 0.2 opakowanie\n* kapusta kiszona:\t100\tg\n* ziemniaki:\t0.2\tkg\n* czosnek granulowany: 4 g\n+ kociołek,łyżka,druciak\n+ obieraczka do warzyw\n\n# bigos\n* kiełbasa ~15cm: 1 szt\n* karkówka:\t125\tg\n* majeranek: 0.2 opakowanie\n* ziarna jałowca: 0.2 opakowanie\n* kapusta kiszona:\t150\tg\n* kapusty (główka): 100 g\n* pomidory krojone puszka / przecier pomidorowy: 50\tg\n* cebula:   50 g\n* suszone śliwki: 7 g\n+ kociołek,łyżka,druciak\n\n# polędwiczki z grilla\n* chleb: 4 kromki\n* polędwiczki wieprzowe: 350\tg\n* żurawina:\t80 g\n+ płyta żeliwna, szpachla\n\n# jajko sadzone\n* chleb: 2 kromki\n* jajka: 2 szt\n* sól: 10 g\n+ płyta żeliwna, szpachla\n\n# pankejki\n* jajka: 1 szt\n* proszek do pieczenia:\t4 g\n* mąka:\t100\tg\n* mleko: 0.1 L\n* cukier: 10 g\n* olej rzepakowy: 35 ml\n+ płyta żeliwna, szpachla\n\n# żurek\n* zakwasu żytniego do żurku: 125ml\n* majeranek: 0.2 opakowanie\n* sól: 10 g\n* pieprz: 10 g\n* kiełbasa ~15cm: 1 szt\n* wędzony boczek: 50 g\n* smietana UHT 18%: 25 g\n* chrzan: 10 g\n* jajka: 2 szt\n+ kociołek,łyżka,druciak\n\n# chili con carne\n* tortilla: 2 szt\n* mięso mielone wołowe:\t125\tg\n* czosnek granulowany: 4 g\n* chilli: 0.1\topakowanie\n* oregano: 0.2 opakowanie\n* kmin rzymski: 0.2 opakowanie\n* sól: 10 g\n* kukurydza puszka: 50g\n* fasola: 50g\n* pomidory krojone puszka / przecier pomidorowy:\t100\tg\n* olej rzepakowy: 35 ml\n* jalapenos:\t50\tg\n* czerwona papryka:\t100 g\n* cebula: \t120 g\n* czekolada gorzka: 0.1 tabliczki\n+ kociołek,łyżka,druciak\n\n# chili sin carne\n* tortilla: 2 szt\n* czosnek granulowany: 4 g\n* chilli: 0.1\topakowanie\n* oregano: 0.2 opakowanie\n* kmin rzymski: 0.2 opakowanie\n* sól: 10 g\n* kukurydza puszka: 50g\n* fasola: 150g\n* pomidory krojone puszka / przecier pomidorowy:\t100\tg\n* olej rzepakowy: 35 ml\n* jalapenos:\t50\tg\n* czerwona papryka:\t100 g\n* cebula: \t120 g\n* czekolada gorzka: 0.1 tabliczki\n+ kociołek,łyżka,druciak\n\n# fasolka po bretońsku\n* pomidory krojone puszka / przecier pomidorowy: 250 g\n* czerwona fasola puszka: 120 g\n* kiełbasa ~15cm: 1 szt\n* wędzony boczek: 50 g\n* cebula: 25 g\n* czosnek granulowany: 2 g\n* majeranek: 0.2 opakowanie\n* zioła prowansalskie: 0.2 opakowanie\n\n# przekąski\n* kabanosy chili: 0.25 opakowania\n* czekolada gorzka: 0.25 tabliczki\n* woda: 1 L\n* kawa: 12 g\n* mięta: 1 torebka\n* herbata: 1 torebka\n\n# akcesoria\n* papier toaletowy: 0.25 rolka\n* reni: 2 tabletki\n* mokre chustki: 10 listków\n* płyn do mycia naczyń: 10 ml\n* worki na śmieci 60L: 1 szt\n* helsi / Porost Islandzki / isla: 2 tabletki\n* apap/ibuprom: 2 tabletki\n+ druciak\n+ gąbka do zmywania\n+ szmaty\n\n# jajecznica z pomidorami\n* jajka: 4 szt\n* chleb: 1 kromki\n* pomidory: 0.5 szt\n* wędzony boczek: 15 g\n* cebula: 50 g\n* sól: 4 g\n\n# szakszuka\n* jajka: 2 szt\n* pomidory krojone puszka: 200 g\n* czerwona papryka:\t150 g\n* cebula: 80 g\n* czosnek granulowany: 8 g\n* sól: 4 g\n* papryka (przyprawa): 0.1 opakowanie\n* kmin rzymski: 0.1 opakowanie\n* natka pietruszki: 0.2 szt\n\n# frytki\n* ziemniaki: 0.2 kg\n* sól: 2 g\n* olej rzepakowy: 200 ml\n+ Metalowe sitko\n+ Durszlak\n\n`\n","import React from \"react\";\n\nexport function PlusMinusRow(props: {\n  value: number;\n  title: string;\n  onChange(mod: number): void;\n}) {\n  return <tr className={props.value > 0 ? 'active' : undefined}>\n    <td>{props.title}</td>\n    <td align=\"right\">{props.value}</td>\n    <td>\n      <button onClick={() => props.onChange(-1)}>-</button>\n      <button onClick={() => props.onChange(+1)}>+</button>\n    </td>\n  </tr>\n}\n","import { BasketForCount, calculateShopping } from \"./CalculateShopping\";\nimport _ from \"lodash\";\nimport { GroceryItem } from \"./recipe/types\";\nimport { category } from \"./categories\";\n\n\nfunction uniqSorted<T>(param: T[]): T[] {\n  return _.sortedUniq(param.sort());\n}\n\nfunction mergeGroceries(a: GroceryItem[], b: GroceryItem[]): GroceryItem[] {\n  const amountByLabel = (list: GroceryItem[], label: string) => list.find(it => it.label === label)?.amount || 0;\n\n  const uniq = _.uniqBy([...a, ...b], it => it.label)\n  return _.sortBy(uniq.map(({label, unit}) => ({\n    amount: amountByLabel(a, label) + amountByLabel(b, label),\n    label,\n    unit,\n  })), it=>[category(it.label), it.label]);\n}\n\nexport function mergeBaskets(...baskets: BasketForCount[]) {\n  return baskets\n    .map(list => calculateShopping(list))\n    .reduce((result, entry) => ({\n      groceries: mergeGroceries(result.groceries, entry.groceries),\n      equipment: uniqSorted([...result.equipment, ...entry.equipment]),\n    }), {\n      groceries: [],\n      equipment: [],\n    });\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport _ from 'lodash';\nimport { GroceryItem, Result } from \"./recipe/types\";\nimport { order } from \"./order\";\nimport { GroceryTable } from \"./GroceryTable\";\nimport { EquipmentList } from \"./EquipmentList\";\nimport { BasketForCount, recipes } from \"./CalculateShopping\";\nimport { PlusMinusRow } from \"./PlusMinusRow\";\nimport { mergeBaskets } from \"./MergeBaskets\";\n\nfunction App() {\n  const [current, setCurrent] = useState<BasketForCount>({\n    basket: {},\n    count: 4,\n  });\n  const [missing, setMissing] = useState<GroceryItem[]>();\n  const [baskets, setBaskets] = useState<BasketForCount[]>([])\n  const [output, setOutput] = useState<Result>({\n    groceries: [],\n    equipment: [],\n  });\n  useEffect(() => {\n    setOutput(mergeBaskets(current, ...baskets));\n  }, [current, baskets])\n  const add = (recipe: string, mod: number) => {\n    setCurrent(c => ({\n      count: c.count,\n      basket: {\n        ...c.basket,\n        [recipe]: Math.max(0, (c.basket[recipe] || 0) + mod)\n      }\n    }));\n  }\n\n  function nextList() {\n    setBaskets([...baskets, {basket: _.pickBy(current.basket), count: current.count}])\n    setCurrent(({count}) => ({count, basket: {}}));\n  }\n\n  function removeBasket(idx: number) {\n    setBaskets(b => b.filter((value, index) => index !== idx));\n  }\n\n  function load(name: string) {\n    try {\n      if (name === '') {\n        setCurrent({basket: {}, count: 4});\n        setBaskets([]);\n      }\n      const data = window.localStorage.getItem(name) || '';\n      const {current, baskets} = JSON.parse(data);\n      setCurrent(current);\n      setBaskets(baskets);\n    } catch (e) {\n      alert(`${e}`);\n    }\n  }\n\n  function save() {\n    const name = prompt('Nazwa');\n    if (!name) {\n      return;\n    }\n    window.localStorage.setItem(name, JSON.stringify({current, baskets}))\n  }\n\n  return <div className=\"App\">\n    <div>\n      <div className=\"noprint\">\n        <select onChange={e => load(e.target.value)}>\n          <option value=''>Otwórz...</option>\n          {Object.keys(window.localStorage).map(key =>\n            <option value={key} key={key}>{key}</option>\n          )}\n        </select>\n        <button onClick={() => save()}>Zapisz</button>\n        <button onClick={nextList}>Kolejne</button>\n        <table>\n          <tbody>\n          <PlusMinusRow value={current.count} title='Osób'\n                        onChange={(mod) => setCurrent(c => ({...c, count: Math.max(c.count + mod, 0)}))}/>\n          {recipes.map(it => it.title).sort().map(it =>\n            <PlusMinusRow key={it}\n                          value={current.basket[it] || 0}\n                          title={it}\n                          onChange={(mod) => add(it, mod)}/>\n          )}\n          </tbody>\n        </table>\n      </div>\n      <ul>\n        {baskets.map((b, idx) => <li>\n          <button className=\"noprint\" onClick={() => removeBasket(idx)}>X</button>\n          Osób {b.count}: {_.toPairs(b.basket).map(([recipe, count]) => `${recipe} (${count})`).join(\", \")}\n        </li>)}\n      </ul>\n    </div>\n    <div style={{overflow: 'auto'}}>\n      <div className=\"noprint\">\n        <button onClick={() => order(output.groceries).then(setMissing)}>Zamów</button>&nbsp;\n        <a href=\"https://github.com/rzymek/recipe-planner/blob/master/README.md\">Przepisy</a>\n      </div>\n      <GroceryTable values={output.groceries}/>\n      <EquipmentList values={output.equipment}/>\n      {missing && <>\n          <h3>Brakuje:</h3>\n          <GroceryTable values={missing}/>\n      </>}\n    </div>\n  </div>\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}